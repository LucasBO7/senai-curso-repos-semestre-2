<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.event+.tarde</name>
    </assembly>
    <members>
        <member name="M:webapi.event_.tarde.Controllers.InstituicaoController.GetAll">
            <summary>
            Busca todas as Instituições da tabela no Banco
            </summary>
            <returns>Lista de Instituições e StatusCode</returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.InstituicaoController.Post(webapi.event_.tarde.Domains.Instituicao)">
            <summary>
            Cadastra uma nova Instituição na tabela no banco
            </summary>
            <param name="instituicao">Objeto do tipo Instituicao</param>
            <returns>StatusCode</returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.InstituicaoController.GetById(System.Guid)">
            <summary>
            Busca Instituicao por meio do id especificado
            </summary>
            <param name="id">Id da instituicao</param>
            <returns>Objeto do tipo Instituicao ou StatusCode</returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.InstituicaoController.Delete(System.Guid)">
            <summary>
            Deleta uma Instituicao por meio de um id especificado
            </summary>
            <param name="id">Id da Instituicao</param>
            <returns>StatusCode</returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.InstituicaoController.Put(System.Guid,webapi.event_.tarde.Domains.Instituicao)">
            <summary>
            Atualiza uma Instituicao na tabela do banco
            </summary>
            <param name="id">Id da Instituicao</param>
            <param name="instituicao">Objeto do tipo Id</param>
            <returns>StatusCode</returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.TipoEventoController.Post(webapi.event_.tarde.Domains.TipoEvento)">
            <summary>
            Cadastra um TipoEveto na tabela no banco
            </summary>
            <param name="tipoEvento"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.TipoUsuarioController.Post(webapi.event_.tarde.Domains.TipoUsuario)">
            <summary>
            Cadastra um novo tipoUsuario na tabela TipoUsuario do banco de dados
            </summary>
            <param name="tipoUsuario">Objeto do tipo TipoUsuario</param>
            <returns>Statuscode</returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.TipoUsuarioController.Delete(System.Guid)">
            <summary>
            Deleta um id com base no usuário
            </summary>
            <param name="id">Id inserido</param>
            <returns>Statuscode</returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.TipoUsuarioController.GetAll">
            <summary>
            Busca todos os TipoUsuarios
            </summary>
            <returns>Lista de TipoUsuarios</returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.TipoUsuarioController.GetById(System.Guid)">
            <summary>
            Busca um TipoUsuario por id
            </summary>
            <param name="id">Id inserido</param>
            <returns>Objeto TipoUsuario ou Statuscode</returns>
        </member>
        <member name="M:webapi.event_.tarde.Controllers.TipoUsuarioController.Put(System.Guid,webapi.event_.tarde.Domains.TipoUsuario)">
            <summary>
            Atualiza um objeto TipoUsuario buscado por Id
            </summary>
            <param name="id">Id do usuário</param>
            <param name="tipoUsuario">Objeto TipoUsuario</param>
            <returns>StatusCode</returns>
        </member>
        <member name="M:webapi.event_.tarde.Interfaces.IInstituicaoRepository.Cadastrar(webapi.event_.tarde.Domains.Instituicao)">
            <summary>
            Método que realiza o cadastro de uma Insituicao
            </summary>
            <param name="instituicao">Objeto do tipo Instituicao</param>
        </member>
        <member name="M:webapi.event_.tarde.Interfaces.IInstituicaoRepository.Deletar(System.Guid)">
            <summary>
            Método que deleta uma Instituicao
            </summary>
            <param name="id">Id da Instituicao</param>
        </member>
        <member name="M:webapi.event_.tarde.Interfaces.IInstituicaoRepository.BuscarTodos">
            <summary>
            Busca lista de todos objetos Instituicao
            </summary>
            <returns>Lista de objetos Insituicao</returns>
        </member>
        <member name="M:webapi.event_.tarde.Interfaces.IInstituicaoRepository.BuscarPorId(System.Guid)">
            <summary>
            Busca objeto Instituicao por id
            </summary>
            <param name="id">Id da instituicao</param>
            <returns>Lista de objetos Insituicao</returns>
        </member>
        <member name="M:webapi.event_.tarde.Interfaces.IInstituicaoRepository.Atualizar(System.Guid,webapi.event_.tarde.Domains.Instituicao)">
            <summary>
            Atualiza um objeto Insituicao existenteS
            </summary>
            <param name="id">Id da instituicao</param>
            <param name="instituicao">Objeto do tipo Instituicao</param>
        </member>
        <member name="T:webapi.event_.tarde.Migrations.BD_v1">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.tarde.Migrations.BD_v1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.tarde.Migrations.BD_v1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.tarde.Migrations.BD_v1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.event_.tarde.Repositories.InstituicaoRepository.Atualizar(System.Guid,webapi.event_.tarde.Domains.Instituicao)">
            <summary>
            Atualiza uma Instituicao por id do banco
            </summary>
            <param name="id">Id da Instituicao</param>
            <param name="instituicao">Objeto do tipo Instituicao</param>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.InstituicaoRepository.BuscarPorId(System.Guid)">
            <summary>
            Busca uma Instituicao por id do banco
            </summary>
            <param name="id">Id da instituição</param>
            <returns>Objeto do tipo Insituicao</returns>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.InstituicaoRepository.BuscarTodos">
            <summary>
            Busca todas as Instituicoes salvas
            </summary>
            <returns>Lista de Objetos tipo Instituicao</returns>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.InstituicaoRepository.Cadastrar(webapi.event_.tarde.Domains.Instituicao)">
            <summary>
            Cadastra uma nova Instituicao no banco de dados
            </summary>
            <param name="instituicao">Objeto do tipo Instituicao</param>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.InstituicaoRepository.Deletar(System.Guid)">
            <summary>
            Deleta uma Instituicao por id no banco de dados
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:webapi.event_.tarde.Repositories.TipoEventoRepository">
            <summary>
            Repositório de Tipo de Evento
            </summary>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.TipoEventoRepository.Cadastrar(webapi.event_.tarde.Domains.TipoEvento)">
            <summary>
            Cadastra um TipoUsuario na tabela do banco
            </summary>
            <param name="tipoEvento">Objeto do tipo TipoEvento</param>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.TipoEventoRepository.Deletar(System.Guid)">
            <summary>
            Deleta um TipoEvento da tabela do banco
            </summary>
            <param name="id">Id do TipoEvento</param>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.TipoEventoRepository.Atualizar(System.Guid,webapi.event_.tarde.Domains.TipoEvento)">
            <summary>
            Atualizar um TipoEvento buscado por id
            </summary>
            <param name="id">Id do TipoEvento</param>
            <param name="tipoEvento">Objeto do tipo TipoEvento</param>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.TipoEventoRepository.BuscarPorId(System.Guid)">
            <summary>
            Busca um TipoEvento por id
            </summary>
            <param name="id">Id do TipoEvento</param>
            <returns>Objeto do tipo TipoEvento</returns>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.TipoEventoRepository.BuscarTodos">
            <summary>
            Busca todos os TipoEvento da tabela do banco
            </summary>
            <returns>Lista de Objetos do tipo TipoEvento</returns>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.TipoUsuarioRepository.Deletar(System.Guid)">
            <summary>
            Deleta um tipoUsuario do banco de dados por meio de um id especificado
            </summary>
            <param name="id">Id inserido</param>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.TipoUsuarioRepository.Listar">
            <summary>
            Lista todos os TipoUsuario do banco de dados
            </summary>
            <returns>Lista de objetos TipoUsuario</returns>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.UsuarioRepository.BuscarPorEmailESenha(System.String,System.String)">
            <summary>
            Busca Objeto Usuario no banco por meio de um email e senha inseridos. Comparando as senhas criptografadas (em hash)
            </summary>
            <param name="email">Email inserido</param>
            <param name="senha">Senha inserida</param>
            <returns></returns>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.UsuarioRepository.BuscarPorId(System.Guid)">
            <summary>
            Busca Objeto Usuario no banco por meio de um id inserido
            </summary>
            <param name="id">Id do usuário inserido</param>
            <returns>Objeto do tipo Usuario</returns>
        </member>
        <member name="M:webapi.event_.tarde.Repositories.UsuarioRepository.Cadastrar(webapi.event_.tarde.Domains.Usuario)">
            <summary>
            Cadastra objeto do tipo Usuario no banco de dados. Gerando hash de criptografia da senha
            </summary>
            <param name="usuario">Objeto do tipo Usuario</param>
        </member>
        <member name="M:webapi.event_.tarde.Utils.Criptografia.GerarHash(System.String)">
            <summary>
            Gera uma Hash a partir de uma senha
            </summary>
            <param name="senha">Senha que receberá a hash</param>
            <returns>Senha criptografada com a hash</returns>
        </member>
        <member name="M:webapi.event_.tarde.Utils.Criptografia.CompararHash(System.String,System.String)">
            <summary>
            Verifica se a hash da senha informada é igual à hash salva no bd
            </summary>
            <param name="senhaFormulario">Senha passada no form de Login</param>
            <param name="senhaBD">Senha cadastrada no banc</param>
            <returns>True ou False</returns>
        </member>
    </members>
</doc>
