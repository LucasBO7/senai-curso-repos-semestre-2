<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="T:webapi.filmes.tarde.Controllers.GeneroController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato:
            dominio/api/nomeController
            Exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.GeneroController._generoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.#ctor">
            <summary>
            Instância do objeto _generoRepository para que haja referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Get">
            <summary>
            Endpoint --> 
            Endpoint que acessa o método de listar os Generos
            </summary>
            <returns>Lista de Generos e um status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.GetbyId(System.Int32)">
            <summary>
            Endpoint que acessa o método de listar um gênero pesquisado por id
            </summary>
            <param name="id">Id do gênero (IdGenero)</param>
            <returns>Objeto Genero pesquisado e um status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.PutByUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de atualizar um Genero passando o id pela url
            </summary>
            <param name="id">id do Genero que será atualizado</param>
            <returns>Status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.PutByBody(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de atualizar um Genero passando o id pelo corpo da requisição
            </summary>
            <param name="genero">Objeto Genero com as alterações</param>
            <returns>Status code</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Representa a entidade(tabela) Filme
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade(tabela) Genero
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IFilmeRepository">
            <summary>
            Interface responsável pelo Filme Repository
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo filme
            </summary>
            <param name="filme">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
            Retornar todos os Filmes cadastrados
            </summary>
            <returns>Lista de objetos Filme</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através do seu id
            </summary>
            <param name="id">Objeto que foi buscado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Atualizar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um Filme existente passando um id pelo corpo da requisição
            </summary>
            <param name="filme"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um Filme existente passando o id pela url da requisição
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <param name="filme">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um Filme existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IGeneroRepository">
            <summary>
            Interface responsável pelo repositório GeneroRepository
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo usuário
            </summary>
            <param name="novoGenero">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os Generos cadastrados
            </summary>
            <returns>Lista de objetos Generos</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através do seu id
            </summary>
            <param name="id">Id do objeto que será buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um Genero existente passando o id pelo corpo da requisição
            </summary>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um Genero existente passando o id pela url da requisição
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um Genero existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.GeneroRepository._stringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Data Source: nome do servidor do banco
            Initial Catalog: nome do banco de dados
            Autenticação
                - windows : Integrated Security = true
                - SqlServer: User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um genero pelo corpo da requisição
            </summary>
            <param name="genero">Objeto do genero alterado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um genero pelo seu id, passado pela url
            </summary>
            <param name="id">Id passado pela url</param>
            <param name="genero">objeto do genero alterado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um genero pelo seu id
            </summary>
            <param name="id">id do genero buscado</param>
            <returns>objeto do tipo Genero buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero"> Objeto com as infomações que serão cadastradas </param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
            Deleta um objeto do tipo gênero
            </summary>
            <param name="id"> Deleta o gênero pelo seu Id </param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Lista todos os objetos do tipo Genero
            </summary>
            <returns>Lista de objetos do tipo Genero</returns>
        </member>
    </members>
</doc>
